{"ast":null,"code":"var _jsxFileName = \"/Users/joaquinbecerra/Desktop/Proyecto Integrador Prog. III/proyectoreact/src/screens/Resultados/Resultados.js\";\nimport React, { Component } from 'react';\nimport CardPelicula from '../../components/CardPelicula/CardPelicula';\nimport Loader from '../../components/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datos: [],\n      loading: true\n    };\n  }\n  componentDidMount() {\n    const apiKey = '7f7f8af8dc7e7a53c53410d1521c094f';\n    const tipo = this.props.match.params.tipo; // 'movie' | 'tv'\n    const input = this.props.match.params.query;\n    const url = `https://api.themoviedb.org/3/search/${tipo}?api_key=${apiKey}&language=es-ES&page=1&query=${encodeURIComponent(input)}`;\n    fetch(url).then(response => response.json()).then(data => {\n      const resultados = data && data.results ? data.results : [];\n      this.setState({\n        datos: resultados,\n        loading: false\n      });\n    }).catch(error => {\n      console.log('El error fue: ' + error);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n  render() {\n    const tipo = this.props.match.params.tipo;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"all-movies\",\n        children: this.state.loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : this.state.datos.map(movie => {\n          const titulo = movie.title ? movie.title : movie.name;\n          return /*#__PURE__*/_jsxDEV(CardPelicula, {\n            id: movie.id,\n            titulo: titulo,\n            imagen: movie.poster_path,\n            descripcion: movie.overview\n            // Para las rutas de detalle serie para tv y movie para películas\n            ,\n            tipo: tipo === 'tv' ? 'serie' : 'movie'\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Results;","map":{"version":3,"names":["React","Component","CardPelicula","Loader","jsxDEV","_jsxDEV","Results","constructor","props","state","datos","loading","componentDidMount","apiKey","tipo","match","params","input","query","url","encodeURIComponent","fetch","then","response","json","data","resultados","results","setState","catch","error","console","log","render","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","titulo","title","name","id","imagen","poster_path","descripcion","overview"],"sources":["/Users/joaquinbecerra/Desktop/Proyecto Integrador Prog. III/proyectoreact/src/screens/Resultados/Resultados.js"],"sourcesContent":["import React, { Component } from 'react';\nimport CardPelicula from '../../components/CardPelicula/CardPelicula';\nimport Loader from '../../components/Loader/Loader';\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datos: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const apiKey = '7f7f8af8dc7e7a53c53410d1521c094f';\n    const tipo = this.props.match.params.tipo;   // 'movie' | 'tv'\n    const input = this.props.match.params.query; \n\n    const url = `https://api.themoviedb.org/3/search/${tipo}?api_key=${apiKey}&language=es-ES&page=1&query=${encodeURIComponent(input)}`;\n\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        const resultados = data && data.results ? data.results : [];\n        this.setState({\n          datos: resultados,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log('El error fue: ' + error);\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    const tipo = this.props.match.params.tipo; \n\n    return (\n      <React.Fragment>\n        <section className=\"all-movies\">\n          {this.state.loading ? (\n            <Loader />\n          ) : (\n            this.state.datos.map(movie => {\n              const titulo = movie.title ? movie.title : movie.name;\n              return (\n                <CardPelicula\n                  key={movie.id}\n                  id={movie.id}\n                  titulo={titulo}\n                  imagen={movie.poster_path}\n                  descripcion={movie.overview}\n                  // Para las rutas de detalle serie para tv y movie para películas\n                  tipo={tipo === 'tv' ? 'serie' : 'movie'}\n                />\n              );\n            })\n          )}\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Results;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,YAAY,MAAM,4CAA4C;AACrE,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,OAAO,SAASL,SAAS,CAAC;EAC9BM,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,MAAMC,MAAM,GAAG,kCAAkC;IACjD,MAAMC,IAAI,GAAG,IAAI,CAACN,KAAK,CAACO,KAAK,CAACC,MAAM,CAACF,IAAI,CAAC,CAAG;IAC7C,MAAMG,KAAK,GAAG,IAAI,CAACT,KAAK,CAACO,KAAK,CAACC,MAAM,CAACE,KAAK;IAE3C,MAAMC,GAAG,GAAG,uCAAuCL,IAAI,YAAYD,MAAM,gCAAgCO,kBAAkB,CAACH,KAAK,CAAC,EAAE;IAEpII,KAAK,CAACF,GAAG,CAAC,CACPG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,UAAU,GAAGD,IAAI,IAAIA,IAAI,CAACE,OAAO,GAAGF,IAAI,CAACE,OAAO,GAAG,EAAE;MAC3D,IAAI,CAACC,QAAQ,CAAC;QACZlB,KAAK,EAAEgB,UAAU;QACjBf,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,CACDkB,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGF,KAAK,CAAC;MACrC,IAAI,CAACF,QAAQ,CAAC;QAAEjB,OAAO,EAAE;MAAM,CAAC,CAAC;IACnC,CAAC,CAAC;EACN;EAEAsB,MAAMA,CAAA,EAAG;IACP,MAAMnB,IAAI,GAAG,IAAI,CAACN,KAAK,CAACO,KAAK,CAACC,MAAM,CAACF,IAAI;IAEzC,oBACET,OAAA,CAACL,KAAK,CAACkC,QAAQ;MAAAC,QAAA,eACb9B,OAAA;QAAS+B,SAAS,EAAC,YAAY;QAAAD,QAAA,EAC5B,IAAI,CAAC1B,KAAK,CAACE,OAAO,gBACjBN,OAAA,CAACF,MAAM;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GAEV,IAAI,CAAC/B,KAAK,CAACC,KAAK,CAAC+B,GAAG,CAACC,KAAK,IAAI;UAC5B,MAAMC,MAAM,GAAGD,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACG,IAAI;UACrD,oBACExC,OAAA,CAACH,YAAY;YAEX4C,EAAE,EAAEJ,KAAK,CAACI,EAAG;YACbH,MAAM,EAAEA,MAAO;YACfI,MAAM,EAAEL,KAAK,CAACM,WAAY;YAC1BC,WAAW,EAAEP,KAAK,CAACQ;YACnB;YAAA;YACApC,IAAI,EAAEA,IAAI,KAAK,IAAI,GAAG,OAAO,GAAG;UAAQ,GANnC4B,KAAK,CAACI,EAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOd,CAAC;QAEN,CAAC;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAErB;AACF;AAEA,eAAelC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}