{"ast":null,"code":"var _jsxFileName = \"/Users/joaquinbecerra/Desktop/Proyecto Integrador Prog. III/proyectoreact/src/screens/Series/Series.js\";\nimport React, { Component } from 'react';\nimport CardPelicula from '../../components/CardPelicula/CardPelicula';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Series extends Component {\n  constructor(props) {\n    super(props);\n    this.obtenerSeries = () => {\n      const apiKey = '7f7f8af8dc7e7a53c53410d1521c094f';\n      const url = `https://api.themoviedb.org/3/tv/popular?api_key=${apiKey}&page=${this.state.pagina}`;\n      fetch(url).then(res => res.json()).then(data => {\n        this.setState(prevState => ({\n          series: prevState.series.concat(data.results),\n          cargando: false,\n          pagina: prevState.pagina + 1\n        }));\n      }).catch(err => console.log('Error al obtener series:', err));\n    };\n    // Nuevo método para manejar los cambios en el input de filtro\n    this.manejarFiltro = evento => {\n      this.setState({\n        valorFiltro: evento.target.value\n      });\n    };\n    this.state = {\n      series: [],\n      pagina: 1,\n      cargando: true,\n      valorFiltro: '' // Nuevo estado para el input de filtro\n    };\n  }\n  componentDidMount() {\n    this.obtenerSeries();\n  }\n  render() {\n    const {\n      series,\n      cargando,\n      valorFiltro\n    } = this.state;\n\n    // Filtramos las series en base al valor del input\n    const seriesFiltradas = series.filter(serie => {\n      // Verificamos si la serie tiene un nombre y si este incluye el texto del filtro\n      return serie.name.toLowerCase().includes(valorFiltro.toLowerCase());\n    });\n    if (cargando) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"alert alert-warning\",\n        children: \"Todas las series\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"filter-form px-0 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"filter\",\n          placeholder: \"Buscar dentro de la lista\",\n          value: valorFiltro,\n          onChange: this.manejarFiltro // El evento onChange llama a nuestro método\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.obtenerSeries,\n        className: \"btn btn-warning\",\n        children: \"Cargar m\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"row cards all-series\",\n        children: seriesFiltradas.length > 0 ? seriesFiltradas.map(serie => /*#__PURE__*/_jsxDEV(CardPelicula, {\n          id: serie.id,\n          titulo: serie.name,\n          imagen: serie.poster_path,\n          descripcion: serie.overview,\n          tipo: \"serie\"\n        }, serie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No se encontraron series que coincidan con el filtro.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default Series;","map":{"version":3,"names":["React","Component","CardPelicula","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Series","constructor","props","obtenerSeries","apiKey","url","state","pagina","fetch","then","res","json","data","setState","prevState","series","concat","results","cargando","catch","err","console","log","manejarFiltro","evento","valorFiltro","target","value","componentDidMount","render","seriesFiltradas","filter","serie","name","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","onClick","length","map","id","titulo","imagen","poster_path","descripcion","overview","tipo"],"sources":["/Users/joaquinbecerra/Desktop/Proyecto Integrador Prog. III/proyectoreact/src/screens/Series/Series.js"],"sourcesContent":["import React, { Component } from 'react';\nimport CardPelicula from '../../components/CardPelicula/CardPelicula';\nimport { Link } from 'react-router-dom';\n\nclass Series extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: [],\n      pagina: 1,\n      cargando: true,\n      valorFiltro: '', // Nuevo estado para el input de filtro\n    };\n  }\n\n  componentDidMount() {\n    this.obtenerSeries();\n  }\n\n  obtenerSeries = () => {\n    const apiKey = '7f7f8af8dc7e7a53c53410d1521c094f';\n    const url = `https://api.themoviedb.org/3/tv/popular?api_key=${apiKey}&page=${this.state.pagina}`;\n\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        this.setState(prevState => ({\n          series: prevState.series.concat(data.results),\n          cargando: false,\n          pagina: prevState.pagina + 1,\n        }));\n      })\n      .catch(err => console.log('Error al obtener series:', err));\n  };\n\n  // Nuevo método para manejar los cambios en el input de filtro\n  manejarFiltro = (evento) => {\n    this.setState({ valorFiltro: evento.target.value });\n  };\n\n  render() {\n    const { series, cargando, valorFiltro } = this.state;\n    \n    // Filtramos las series en base al valor del input\n    const seriesFiltradas = series.filter(serie => {\n      // Verificamos si la serie tiene un nombre y si este incluye el texto del filtro\n      return serie.name.toLowerCase().includes(valorFiltro.toLowerCase());\n    });\n\n    if (cargando) {\n      return <h2>Cargando...</h2>;\n    }\n\n    return (\n      <>\n        <h2 className=\"alert alert-warning\">Todas las series</h2>\n        <form className=\"filter-form px-0 mb-3\">\n          <input \n            type=\"text\" \n            name=\"filter\" \n            placeholder=\"Buscar dentro de la lista\"\n            value={valorFiltro}\n            onChange={this.manejarFiltro} // El evento onChange llama a nuestro método\n          />\n        </form>\n        \n        <button onClick={this.obtenerSeries} className=\"btn btn-warning\">Cargar más</button>\n\n        <section className=\"row cards all-series\">\n          {seriesFiltradas.length > 0 ? (\n            seriesFiltradas.map(serie => (\n              <CardPelicula\n                key={serie.id}\n                id={serie.id}\n                titulo={serie.name}\n                imagen={serie.poster_path}\n                descripcion={serie.overview}\n                tipo=\"serie\"\n              />\n            ))\n          ) : (\n            <p>No se encontraron series que coincidan con el filtro.</p>\n          )}\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Series;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}