{"ast":null,"code":"var _jsxFileName = \"/Users/joaquinbecerra/Desktop/Proyecto Integrador Prog. III/proyectoreact/src/screens/Movies/Movies.js\";\nimport React, { Component } from 'react';\nimport CardPelicula from '../../components/CardPelicula/CardPelicula';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Movies extends Component {\n  constructor(props) {\n    super(props);\n    this.obtenerPeliculas = () => {\n      const apiKey = '7f7f8af8dc7e7a53c53410d1521c094f';\n      const categoria = new URLSearchParams(this.props.location.search).get(\"category\");\n      let url = '';\n      if (categoria === 'popular') {\n        url = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&page=${this.state.pagina}`;\n        this.setState({\n          titulo: 'Películas populares'\n        });\n      } else if (categoria === 'now_playing') {\n        url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&page=${this.state.pagina}`;\n        this.setState({\n          titulo: 'Películas en cartelera'\n        });\n      } else {\n        url = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&page=${this.state.pagina}`;\n        this.setState({\n          titulo: 'Todas las películas'\n        });\n      }\n      fetch(url).then(res => res.json()).then(data => {\n        this.setState(prevState => ({\n          peliculas: prevState.peliculas.concat(data.results),\n          peliculasFiltradas: prevState.peliculasFiltradas.concat(data.results),\n          cargando: false,\n          pagina: prevState.pagina + 1\n        }));\n      }).catch(err => console.log('Error al obtener películas:', err));\n    };\n    this.filtrarBusqueda = e => {\n      const inputBuscador = e.target.value;\n      const peliculasFiltradas = this.state.peliculas.filter(pelicula => pelicula.title.toLowerCase().includes(inputBuscador.toLowerCase()));\n      this.setState({\n        peliculasFiltradas: peliculasFiltradas,\n        inputBuscador: inputBuscador\n      });\n    };\n    this.state = {\n      peliculas: [],\n      pagina: 1,\n      cargando: true,\n      titulo: 'Todas las películas',\n      peliculasFiltradas: [],\n      // Nuevo array para guardar los resultados del filtro\n      inputBuscador: '' // Nuevo estado para el valor del input\n    };\n  }\n  componentDidMount() {\n    this.obtenerPeliculas();\n  }\n  render() {\n    const {\n      peliculasFiltradas,\n      cargando,\n      titulo,\n      inputBuscador\n    } = this.state;\n    if (cargando) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"alert alert-primary\",\n        children: titulo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"filter-form px-0 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"filter\",\n          placeholder: \"Buscar dentro de la lista\",\n          value: inputBuscador,\n          onChange: this.filtrarBusqueda\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"row cards all-movies\",\n        children: peliculasFiltradas.length > 0 ? peliculasFiltradas.map(pelicula => /*#__PURE__*/_jsxDEV(CardPelicula, {\n          id: pelicula.id,\n          titulo: pelicula.title,\n          imagen: pelicula.poster_path,\n          descripcion: pelicula.overview,\n          tipo: \"movie\"\n        }, pelicula.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No se encontraron pel\\xEDculas que coincidan.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.obtenerPeliculas,\n        className: \"btn btn-info\",\n        children: \"Cargar m\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default Movies;","map":{"version":3,"names":["React","Component","CardPelicula","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","constructor","props","obtenerPeliculas","apiKey","categoria","URLSearchParams","location","search","get","url","state","pagina","setState","titulo","fetch","then","res","json","data","prevState","peliculas","concat","results","peliculasFiltradas","cargando","catch","err","console","log","filtrarBusqueda","e","inputBuscador","target","value","filter","pelicula","title","toLowerCase","includes","componentDidMount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","name","placeholder","onChange","length","map","id","imagen","poster_path","descripcion","overview","tipo","onClick"],"sources":["/Users/joaquinbecerra/Desktop/Proyecto Integrador Prog. III/proyectoreact/src/screens/Movies/Movies.js"],"sourcesContent":["import React, { Component } from 'react';\nimport CardPelicula from '../../components/CardPelicula/CardPelicula';\nimport { Link } from 'react-router-dom';\n\nclass Movies extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      peliculas: [],\n      pagina: 1,\n      cargando: true,\n      titulo: 'Todas las películas',\n      peliculasFiltradas: [], // Nuevo array para guardar los resultados del filtro\n      inputBuscador: '', // Nuevo estado para el valor del input\n    };\n  }\n\n  componentDidMount() {\n    this.obtenerPeliculas();\n  }\n\n  obtenerPeliculas = () => {\n    const apiKey = '7f7f8af8dc7e7a53c53410d1521c094f'; \n    const categoria = new URLSearchParams(this.props.location.search).get(\"category\");\n    let url = '';\n    \n    if (categoria === 'popular') {\n        url = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&page=${this.state.pagina}`;\n        this.setState({ titulo: 'Películas populares' });\n    } else if (categoria === 'now_playing') {\n        url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&page=${this.state.pagina}`;\n        this.setState({ titulo: 'Películas en cartelera' });\n    } else {\n        url = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&page=${this.state.pagina}`;\n        this.setState({ titulo: 'Todas las películas' });\n    }\n\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        this.setState(prevState => ({\n          peliculas: prevState.peliculas.concat(data.results),\n          peliculasFiltradas: prevState.peliculasFiltradas.concat(data.results),\n          cargando: false,\n          pagina: prevState.pagina + 1,\n        }));\n      })\n      .catch(err => console.log('Error al obtener películas:', err));\n  };\n\n  filtrarBusqueda = (e) => {\n    const inputBuscador = e.target.value;\n    const peliculasFiltradas = this.state.peliculas.filter(pelicula =>\n      pelicula.title.toLowerCase().includes(inputBuscador.toLowerCase())\n    );\n    this.setState({\n      peliculasFiltradas: peliculasFiltradas,\n      inputBuscador: inputBuscador,\n    });\n  };\n\n  render() {\n    const { peliculasFiltradas, cargando, titulo, inputBuscador } = this.state;\n    \n    if (cargando) {\n      return <h2>Cargando...</h2>;\n    }\n\n    return (\n      <>\n        <h2 className=\"alert alert-primary\">{titulo}</h2>\n        <form className=\"filter-form px-0 mb-3\">\n          <input \n            type=\"text\" \n            name=\"filter\" \n            placeholder=\"Buscar dentro de la lista\" \n            value={inputBuscador}\n            onChange={this.filtrarBusqueda}\n          />\n        </form>\n        \n\n        <section className=\"row cards all-movies\">\n          {peliculasFiltradas.length > 0 ? (\n            peliculasFiltradas.map(pelicula => (\n              <CardPelicula\n                key={pelicula.id}\n                id={pelicula.id}\n                titulo={pelicula.title}\n                imagen={pelicula.poster_path}\n                descripcion={pelicula.overview}\n                tipo=\"movie\"\n              />\n            ))\n          ) : (\n            <p>No se encontraron películas que coincidan.</p>\n          )}\n        </section>\n        <button onClick={this.obtenerPeliculas} className=\"btn btn-info\">Cargar más</button>\n\n      </>\n    );\n  }\n}\n\nexport default Movies;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}