{"ast":null,"code":"var _jsxFileName = \"/Users/joaquinbecerra/Desktop/Proyecto Integrador Prog. III/proyectoreact/src/screens/Series/Series.js\";\nimport CardPelicula from '../../components/CardPelicula/CardPelicula';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MjQ4YmQ2OWRmY2EzOTBlYmRkNTNlOTczZGRhYWMzMiIsIm5iZiI6MTc1ODA1MTMzMi42MzYsInN1YiI6IjY4YzliYzA0MTM2YmMyMjlkMWRjZDUzYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.HgWZMujxiAIHAmksJ25td32MauANC1o3_q6e1DfvChU'\n  }\n};\nclass Series extends Component {\n  constructor(props) {\n    super(props);\n    this.obtenerSeries = () => {\n      fetch(`${this.state.urlSeries}&page=${this.state.pagina}`).then(res => res.json()).then(data => {\n        this.setState(prevState => ({\n          series: prevState.series.concat(data.results),\n          seriesOriginales: prevState.seriesOriginales.concat(data.results),\n          cargando: false,\n          pagina: prevState.pagina + 1\n        }));\n      }).catch(error => {\n        console.log('Error al cargar series:', error);\n        this.setState({\n          cargando: false\n        });\n      });\n    };\n    this.manejarCambios = event => {\n      const input = event.target.value;\n      const seriesFiltradas = this.state.seriesOriginales.filter(serie => serie.name.toLowerCase().includes(input.toLowerCase()));\n      this.setState({\n        series: seriesFiltradas,\n        input: input\n      });\n    };\n    this.state = {\n      series: [],\n      seriesOriginales: [],\n      urlSeries: `https://api.themoviedb.org/3/tv/popular?api_key=7f7f8af8dc7e7a53c53410d1521c094f`,\n      cargando: true,\n      pagina: 1,\n      input: ''\n    };\n  }\n  componentDidMount() {\n    this.obtenerSeries();\n  }\n  render() {\n    const {\n      series,\n      cargando,\n      input\n    } = this.state;\n    if (cargando) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todas las series\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"buscador\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Buscar una serie...\",\n          onChange: this.manejarCambios,\n          value: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"row cards all-series\",\n        id: \"series\",\n        children: series.length > 0 ? series.map(serie => /*#__PURE__*/_jsxDEV(CardPelicula, {\n          id: serie.id,\n          titulo: serie.name,\n          imagen: serie.poster_path,\n          descripcion: serie.overview,\n          tipo: \"serie\"\n        }, serie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No se encontraron series que coincidan.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.obtenerSeries,\n        className: \"btn btn-warning\",\n        children: \"Cargar m\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default Series;","map":{"version":3,"names":["CardPelicula","React","Component","withRouter","jsxDEV","_jsxDEV","options","method","headers","accept","Authorization","Series","constructor","props","obtenerSeries","fetch","state","urlSeries","pagina","then","res","json","data","setState","prevState","series","concat","results","seriesOriginales","cargando","catch","error","console","log","manejarCambios","event","input","target","value","seriesFiltradas","filter","serie","name","toLowerCase","includes","componentDidMount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","className","type","placeholder","onChange","id","length","map","titulo","imagen","poster_path","descripcion","overview","tipo","onClick"],"sources":["/Users/joaquinbecerra/Desktop/Proyecto Integrador Prog. III/proyectoreact/src/screens/Series/Series.js"],"sourcesContent":["import CardPelicula from '../../components/CardPelicula/CardPelicula';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nconst options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MjQ4YmQ2OWRmY2EzOTBlYmRkNTNlOTczZGRhYWMzMiIsIm5iZiI6MTc1ODA1MTMzMi42MzYsInN1YiI6IjY4YzliYzA0MTM2YmMyMjlkMWRjZDUzYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.HgWZMujxiAIHAmksJ25td32MauANC1o3_q6e1DfvChU'\n    }\n  };\n\n  class Series extends Component {\n\n    constructor(props) {\n    super(props);\n    this.state = {\n      series: [],\n      seriesOriginales: [],\n      urlSeries: `https://api.themoviedb.org/3/tv/popular?api_key=7f7f8af8dc7e7a53c53410d1521c094f`,\n      cargando: true,\n      pagina: 1,\n      input: '',\n    };\n  }\n\n  componentDidMount() {\n    this.obtenerSeries();\n  }\n\n  obtenerSeries = () => {\n    fetch(`${this.state.urlSeries}&page=${this.state.pagina}`)\n    .then(res => res.json())\n    .then(data => {\n      this.setState(prevState => ({\n        series: prevState.series.concat(data.results),\n        seriesOriginales: prevState.seriesOriginales.concat(data.results),\n        cargando: false,\n        pagina: prevState.pagina + 1,\n      }));\n    })\n    .catch(error => {\n      console.log('Error al cargar series:', error);\n      this.setState({ cargando: false });\n    });\n  };\n\n  manejarCambios = (event) => {\n    const input = event.target.value;\n    const seriesFiltradas = this.state.seriesOriginales.filter(serie =>\n      serie.name.toLowerCase().includes(input.toLowerCase())\n    );\n    this.setState({\n      series: seriesFiltradas,\n      input: input,\n    });\n  };\n\n  render() {\n    const { series, cargando, input } = this.state;\n     \n     if (cargando) {\n       return <h2>Cargando...</h2>;\n     }\n\n     return (\n        <React.Fragment>\n        \n        <h2>Todas las series</h2>\n\n        <form className=\"buscador\">\n          <input \n            type='text' \n            placeholder=\"Buscar una serie...\" \n            onChange={this.manejarCambios} \n            value={input}\n          />\n        </form>\n\n        <section className=\"row cards all-series\" id=\"series\">\n            {series.length > 0 ? (\n                series.map(serie => (\n                  <CardPelicula \n                    key={serie.id}\n                    id={serie.id}\n                    titulo={serie.name}\n                    imagen={serie.poster_path}\n                    descripcion={serie.overview}\n                    tipo=\"serie\"\n                  />\n                ))\n            ) : (\n                <p>No se encontraron series que coincidan.</p>\n            )}\n        </section>\n\n        <button onClick={this.obtenerSeries} className=\"btn btn-warning\">Cargar m√°s</button>\n             \n        </React.Fragment>\n     );\n  }\n}\n\nexport default Series;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}